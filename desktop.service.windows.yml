

- import_playbook: "desktop.hardware.kvm.yml"
- import_playbook: "desktop.hardware.vfio.yml"
- import_playbook: "desktop.service.libvirt.yml"


- hosts: "all"
  become: true
  become_user: "root"

  vars:

    service_windows_enabled: true

    service_windows_title: "Windows Guest"
    service_windows_description: "Windows Guest"

    service_windows_image_path: "/var/lib/libvirt/images/windows"
    service_windows_image_size: 256
    service_windows_image_unit: "G"

    service_windows_looking_glass_name: "windows"
    service_windows_looking_glass_path: "/dev/shm/{{ service_windows_looking_glass_name }}"
    service_windows_spice_path: "/run/libvirt/qemu/spice/windows"

    service_windows_cputhread_pin: [ 4, 5, 6, 7, 12, 13, 14, 15 ]
    service_windows_iothread_pin: [ 3, 11 ]
    service_windows_processor_cores: 4
    service_windows_processor_threads: 2
    service_windows_memory_size: 12
    service_windows_memory_unit: GiB
    service_windows_looking_glass_size: 64
    service_windows_looking_glass_unit: MiB

    service_windows_passthroughs:
      - functions:
          - { "bus": 0x03, "slot": 0x0, "function": 0x0 }

    service_windows_descriptor_conflicts:
      - /dev/dri/by-path/pci-0000:03:00.0-card
      - /dev/dri/by-path/pci-0000:03:00.0-render

    service_windows_module_conflicts: []

  tasks:

    - name: "Setup Windows Virtual Machine"
      when: "service_windows_enabled|default(false)"
      block:

        - name: "Setup Windows Virtual Machine: Create Dedicated Group for the Virtual Machine"
          ansible.builtin.group:
            name: "windows"
            state: "present"
            system: true

        - name: "Setup Windows Virtual Machine: Create Configuration Directories"
          ansible.builtin.file:
            dest: "{{ item.path }}"
            state: "directory"
            owner: "{{ item.owner|default('root') }}"
            group: "{{ item.group|default('root') }}"
            mode: "{{ item.mode|default('0755') }}"
          loop:
            - { path: "/etc/libvirt/hooks" }
            - { path: "/etc/libvirt/hooks/qemu.d" }
            - { path: "/opt/windows" }
            - { path: "/opt/windows/bin" }

        - name: "Setup Windows Virtual Machine: Install Configuration Files"
          ansible.builtin.template:
            dest: "{{ item.path }}"
            src: "{{ playbook_dir }}/files/desktop/{{ item.path }}.j2"
            owner: "{{ item.owner|default('root') }}"
            group: "{{ item.group|default('root') }}"
            mode: "{{ item.mode|default('0644') }}"
          loop:
            - { path: "/etc/libvirt/hooks/qemu.d/windows", mode: "0755" }
            - { path: "/etc/polkit-1/rules.d/10-windows.rules", mode: "0644" }
            - { path: "/etc/profile.d/windows.sh", mode: "0644" }
            - { path: "/opt/windows/bin/windows-eject-cdrom", mode: "0755" }
            - { path: "/opt/windows/bin/windows-insert-cdrom", mode: "0755" }
            - { path: "/opt/windows/bin/windows-quit", mode: "0755" }
            - { path: "/opt/windows/bin/windows-start", mode: "0755" }
            - { path: "/opt/windows/bin/windows-reset", mode: "0755" }
            - { path: "/opt/windows/bin/windows-viewer", mode: "0755" }

        - name: "Setup Windows Virtual Machine: Create Disk Images"
          ansible.builtin.shell:
            cmd: "qemu-img create -f raw -o preallocation=falloc {{ service_windows_image_path }} {{ service_windows_image_size }}{{ service_windows_image_unit }}"
            creates: "{{ service_windows_image_path }}"

        - name: "Setup Windows Virtual Machine: Define Libvirt Virtual Machine"
          community.libvirt.virt:
            command: "define"
            xml: "{{ lookup('template', 'files/desktop/etc/libvirt/qemu/windows.xml.j2') }}"
            uri: "qemu:///system"


