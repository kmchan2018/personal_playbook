

- hosts: "desktop"
  become: true
  become_user: "root"

  vars:

    network_devices:
      wg0:
        - template: /etc/systemd/network/device.network
          owner: root
          group: systemd-network
          mode: "0644"
          options:
            method: static
            address: 192.168.254.2
            netmask: 255.255.255.0
        - template: /etc/systemd/network/device.netdev
          owner: root
          group: systemd-network
          mode: "0640"
          options:
            kind: wireguard
            private_key: "{{ network_devices_wireguard_keypairs.home.desktop.private_key }}"
            listen_port: 51820
            peers:
              - endpoint: "kmchan-server.local:51820"
                public_key: "{{ network_devices_wireguard_keypairs.home.server.public_key }}"
                allowed_ips: 192.168.254.0/24
        - template: /etc/NetworkManager/conf.d/device.conf
          options:
            unmanaged: true

  tasks:

    - name: "Setup Network Devices: Enable Networkd"
      ansible.builtin.systemd_service:
        name: "systemd-networkd.service"
        state: "started"
        enabled: true
        daemon_reload: true

    - name: "Setup Network Devices: Install Helper Tools from Distribution"
      ansible.builtin.dnf:
        name:
          - "bridge-utils"
          - "wireguard-tools"
        state: "latest"

    - name: "Setup Network Devices: Load Secrets from Vault"
      ansible.builtin.include_vars:
        file: "secrets/network.devices.vault"

    - name: "Setup Network Devices: Install Configuration Files"
      ansible.builtin.template:
        dest: "{{ item.1.template|replace('device', item.0.device) }}"
        src: "{{ playbook_dir }}/files/desktop/{{ item.1.template }}.j2"
        owner: "{{ item.1.owner|default('root') }}"
        group: "{{ item.1.group|default('root') }}"
        mode: "{{ item.1.mode|default('0644') }}"
      vars:
        device: "{{ item.0.device }}"
        options: "{{ item.1.options|default({}) }}"
      loop: "{{ network_devices|default({})|dict2items(key_name='device',value_name='files')|subelements('files') }}"
      loop_control:
        label: "{{ item.1.template|replace('device', item.0.device) }}"


